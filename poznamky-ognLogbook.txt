
## REQUIRED PACKAGES for INSTALLATION ##

python3.8-dev
apt install mosquitto-clients
#apt install gdal-bin
#apt install libgdal-dev

--

REDISQ:

Spusteni workera:
    aktivnim venvem a ve stejnem adresari, kde jsou zdrojaky /src/
        rq worker beacons -q

Info o stavu zpracovani:
    rqinfo

--

INFLUX DB:

influxd backup -database ogn_logbook /tmp/00/mysnapshot
influxd restore -db ogn_logbook /tmp/00/mysnapshot

Remote access:
    influxdb.conf:
        bind-address = ":8086"

    iptables:
        # influxdb port forwarding:
        iptables -t nat -I PREROUTING --src 0/0 --dst 0.0.0.0 -p tcp --dport 8086 -j REDIRECT --to-ports 8086
        iptables -A INPUT -m state --state NEW -p tcp -s 192.168.1.0/24 --dport 8086 -j ACCEPT

    show retention policies
    CREATE RETENTION POLICY logbook_retention2 ON ogn_logbook DURATION 1d REPLICATION 1
    ALTER RETENTION POLICY logbook_retention2 ON ogn_logbook DURATION 1d REPLICATION 1 SHARD DURATION 1d DEFAULT

    STM / Short Time Memory (for all encountered traffic):
        CREATE RETENTION POLICY ogn_stm_retention1 ON ogn_logbook_stm DURATION 1d REPLICATION 1 SHARD DURATION 1d DEFAULT

--

EU terrain elevation data:
    https://land.copernicus.eu/imagery-in-situ/eu-dem/eu-dem-v1.1?tab=mapview

Installation:
    apt install gdal-bin
       - nainstaluje i python3-gdal
    apt install libgdal-dev
    pip3 install wheel
    export CPLUS_INCLUDE_PATH=/usr/include/gdal
    export C_INCLUDE_PATH=/usr/include/gdal
    gdalinfo --version
    pip3 install gdal==2.4.0

gdallocationinfo -wgs84 eu_dem_v11_E40N20.TIF 16.1144561 49.3678764 |grep Value| cut -d":" -f 2
gdallocationinfo -wgs84 -valonly eu_dem_v11_E40N20.TIF 16.1144561 49.3678764

Joining all tiles to one file:
    # @see https://gis.stackexchange.com/questions/230553/merging-all-tiles-from-one-directory-using-gdal
    gdalbuildvrt mosaic.vrt *.tif
    gdal_translate -of GTiff -co "COMPRESS=TIFF" -co "TILED=YES" mosaic.vrt mosaic.tif

--

PROFILING:

    pycallgraph graphviz ./ognLogbookApp.py
    or
    python3.7 -m cProfile -o profiler.output.file ./ognLogbookApp.py

    Read and process the logfile:
        import pstats
        p = pstats.Stats('profiler.output.file2')
        p.sort_stats('cumulative').print_stats(25)

    Threads profiling:
        https://code.activestate.com/recipes/465831/
        https://stackoverflow.com/questions/582336/how-can-you-profile-a-python-script

--

https://python-rq.org/docs/

https://codepen.io/huange/pen/rbqsD

https://en.wikipedia.org/wiki/List_of_airports_by_ICAO_code:_L

--

PIP:
export CPLUS_INCLUDE_PATH=/usr/include/gdal
export C_INCLUDE_PATH=/usr/include/gdal
gdal-config --version
pip install GDAL==3.0.4


-- 

telnet aprs.glidernet.org 14580
user ibitest pass 0000 vers PokusApp 0.0.1 filter r/+49.3678/+16.1145/40

--

JS date picker(s):
    https://www.cssscript.com/tag/date-picker/
	    https://github.com/mikecoj/MCDatepicker
    https://demo.mobiscroll.com/javascript/calendar/range-select#

--

Dalsi DB letist:
    * https://ourairports.com/data/#
    * https://metar-taf.com

--
Let s nufikem dynamikem:
    http://127.0.0.1:5000/map/41093501

-- USERs --
    id
    token
    email(s)
    creation_ts
    lang
    last_access_ts
    access_counter
    (last_ip_addr)

-- FLEETs --
    id
    user_id
    label
    airplanes

-- WATCHERs --
    id
    user_id
    prefix+address
    (registration)
    (competition_number)
    (num_notifications)



